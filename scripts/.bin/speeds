#!/bin/python

import psutil as P
import math
from time import sleep
from tabulate import tabulate, RIGHT, LEFT

DELAY = 1
HISTLEN = 10
INTERVALS = [1, 5, 10]

def clear_screen():
   print('\x1b[?1049h\x1b[2J\x1b[H',end='')

def print_bytes(b):
   prefixes = ["B", "KB", "MB", "GB", "TB"]
   if b == 0:
      mag = 0
      num = 0
   else:
      mag = math.floor(math.log(b, 1000))
      num = round((b/1000**mag)*10)/10
   return "{}{}/s".format(num, prefixes[mag])

def print_stats(history, recv, sent, header):
   name, recv_name, sent_name = header
   fields = [tuple(
      [name] +
      ["{}-{}".format(recv_name, i) for i in INTERVALS] +
      ["{}-{}".format(sent_name, i) for i in INTERVALS]
   )]
   latest = history[0]
   for iface,stats in latest.items():
      fields.append(tuple(
         [iface] +
         [print_bytes((getattr(stats, recv) - getattr(history[i][iface], recv)) / (DELAY * i)) for i in INTERVALS] +
         [print_bytes((getattr(stats, sent) - getattr(history[i][iface], sent)) / (DELAY * i)) for i in INTERVALS]
      ))

   print(
      tabulate(
         fields,
         end='\x1b[K\n',
         end_on_last_line=True,
         widths=(0, 8),
         align=(LEFT,RIGHT)
      ),
      end='')

def main():
   nethist = [P.net_io_counters(pernic=True)]
   nethist = nethist*(HISTLEN+1)
   diskhist = [P.disk_io_counters(perdisk=True)]
   diskhist = diskhist*(HISTLEN+1)
   clear_screen()

   while True:
      print('\x1b[H',end='') # move cursor to the beginning
      nethist.pop()
      nethist.insert(0, P.net_io_counters(pernic=True))
      print_stats(nethist, "bytes_recv", "bytes_sent", ("iface", "recv", "sent"))

      print()
      diskhist.pop()
      diskhist.insert(0, P.disk_io_counters(perdisk=True))
      print_stats(diskhist, "read_bytes", "write_bytes", ("part", "read", "write"))
      print('\x1b[J', end='')

      try:
         sleep(DELAY)
      except KeyboardInterrupt:
         break

   print('\x1b[?1049l',end='') # restore previous state

if __name__ == "__main__":
   main()
