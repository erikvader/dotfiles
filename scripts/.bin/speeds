#!/bin/python

import psutil as P
import math
from time import sleep
from tabulate import tabulate, RIGHT, LEFT

DELAY = 2

def clear_screen():
   print('\x1b[2J\x1b[H',end='')

def print_bytes(b):
   prefixes = ["B", "KB", "MB", "GB", "TB"]
   if b == 0:
      mag = 0
      num = 0
   else:
      mag = math.floor(math.log(b, 1000))
      num = round((b/1000**mag)*10)/10
   return "{}{}/s".format(num, prefixes[mag])

def main():
   netprev = P.net_io_counters(pernic=True)
   diskprev = P.disk_io_counters(perdisk=True)
   clear_screen()

   while True:
      print('\x1b[H',end='') # move cursor to the beginning
      cur = P.net_io_counters(pernic=True)
      print(
         tabulate(
            [("iface", "recv", "sent")] +
            [
               (
                  iface,
                  print_bytes((stats.bytes_recv - netprev[iface].bytes_recv) / DELAY),
                  print_bytes((stats.bytes_sent - netprev[iface].bytes_sent) / DELAY)
               )
               for iface,stats in cur.items()
            ],
            end='\x1b[K\n',
            end_on_last_line=True,
            widths=(0, 8),
            align=(LEFT,RIGHT)
         ),
         end='')
      netprev = cur

      print()
      cur = P.disk_io_counters(perdisk=True)
      print(
         tabulate(
            [("part", "read", "write")] +
            [
               (
                  part,
                  print_bytes((stats.read_bytes - diskprev[part].read_bytes) / DELAY),
                  print_bytes((stats.write_bytes - diskprev[part].write_bytes) / DELAY)
               )
               for part,stats in cur.items()
            ],
            end='\x1b[K\n',
            end_on_last_line=True,
            widths=(0, 8),
            align=(LEFT,RIGHT)
         ),
         end='')
      diskprev = cur

      try:
         sleep(DELAY)
      except KeyboardInterrupt:
         break

if __name__ == "__main__":
   main()
