#!/bin/bash

declare -A scripts

scripts["Switch to speakers"]='speakers speakers'
scripts["Switch to headphones"]='speakers headphones'
scripts["Switch to headphones and speakers"]='speakers both'
scripts["Clipboard history"]='CM_LAUNCHER=rofi-script clipmenu "$(CM_LAUNCHER=rofi-script clipmenu | fzf_dmenu)"'
scripts["Invert colors"]="xrandr-invert-colors"
scripts["Toggle redshift"]="pkill -USR1 '^redshift$'"
scripts["Audio powersave toggle"]="gksudo toggle_audio_powersave"
scripts["Manjaro i3 menu"]="morc_menu"
scripts["Manjaro Settings Manager"]="manjaro-settings-manager"
scripts["PulseAudio Volume Control"]="pavucontrol"
scripts["bmenu"]="terminal -e bmenu"
scripts["Kill compton"]="pkill compton"
scripts["Start/restart compton"]="display_updater compton"
scripts["Screenshot whole screen"]="maim-notify -ud 1"
scripts["Screenshot selection"]="maim-notify -su"
scripts["Screenshot clipboard whole screen"]="maim_clipboard -ud 1"
scripts["Screenshot clipboard selection"]="maim_clipboard -su"
scripts["Set transparency to 99%"]="transset-df -a 0.99"
scripts["Set transparency to 100%"]="transset-df -a 1"
scripts["Program mode toggle"]="prog_mode_toggle"
scripts["Program mode swedish toggle"]="prog_mode_toggle swetoggle"
scripts["Show xtitle"]='notify-send "$(xtitle)"'
scripts["Change theme"]="theme_select_rofi"
scripts["Lock and turn off screen"]="screenmng lock"
scripts["Lock"]='screenmng lock_only'
scripts["Display Updater"]="display_updater_rofi"
scripts["Open Downloaded PDF"]='open_downloaded_pdf'
scripts["Suspend"]='systemctl suspend'
scripts['Presentation Mode toggle']='screenmng toggle'
scripts['Org Agenda']='emacsclient -n -c -e '"'"'(same-buffer (org-agenda))'"'"
scripts['Emacs Calc']='emacsclient -n -c -e "(progn (full-calc) (calc-trail-display t))"'
scripts['Org quick todo']="fzf_dmenu -- 'Add TODO: ' | sed -E 's/^/* TODO /' >> $HOME/Dropbox/org/keep.org"
scripts['Org open keep.org']="emacsclient -c -n $HOME/Dropbox/org/keep.org"
scripts['Man']="rofi_man"
scripts['Emoji selector']='rofi_iconfont emoji "$HOME/.emoji"'
scripts['Font Awesome 4.7 selector']='rofi_iconfont awesome "$HOME/.awesome47"'
scripts['Emotion selector']='rofi_emoticon'
scripts['Mount USB drive']='usbmounter mount'
scripts['Unmount USB drive']='usbmounter unmount'
scripts['Power off USB drive']='usbmounter poweroff'
scripts['Watch Movie']='watch_movie'
scripts['Watch Movie Rebuild Index']='watch_movie -r'

choice=$(printf '%s\n' "${!scripts[@]}" | sort | fzf_dmenu)

if [[ "$choice" ]]; then
    # NOTE: None of these commands are long running, so they don't
    # really need to be in a new session (setsid). This script is only
    # spawned from xmonad anyway, and that runs setsid. So the forked
    # bash here has a unique session, it is just not equal to it's own
    # PID.
    eval "${scripts[$choice]}" &
fi
