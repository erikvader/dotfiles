#!/bin/bash

set -e

CARD=alsa_output.pci-0000_00_1f.3.analog-stereo
ACARD=0
HEADPHONES=analog-output-headphones
SPEAKERS=analog-output-lineout

if [[ $# -eq 0 ]]; then
    echo fel
    exit 1
fi

function activate {
    amixer -q -c $ACARD set "$1" unmute
    amixer -q -c $ACARD set "$1" 100%
}

function deactivate {
    amixer -q -c $ACARD set "$1" 0%
}

function is_status {
    output=$(amixer -c $ACARD get "$1")
    if grep -qF '[100%]' <<< "$output" && [[ $2 = on ]]; then
        return 0
    elif grep -qF '[0%]' <<< "$output" && [[ $2 = off ]]; then
        return 0
    else
        return 1
    fi
}

function is_profile_active {
    pactl list sinks | awk 'BEGIN { rightsink=0 ; found=1 }
/^[[:blank:]]+Name: / { rightsink=($2 == "'"$CARD"'") }
rightsink && /Active Port: '"$1"'/ { found=0 ; exit }
END { exit found }'
}

if [[ $1 = status ]]; then
    if is_profile_active $HEADPHONES && is_status Headphone on && is_status Front off; then
        echo H
    elif is_profile_active $SPEAKERS && is_status Headphone off && is_status Front on; then
        echo S
    elif is_profile_active $SPEAKERS && is_status Headphone on && is_status Front on; then
        echo HS
    else
        echo X
    fi
    exit
fi

amixer -q -c $ACARD set 'Auto-Mute Mode' Disabled

if [[ $1 = headphones ]]; then
    pactl set-sink-port $CARD $HEADPHONES
    activate Headphone
    deactivate Front
elif [[ $1 = speakers ]]; then
    pactl set-sink-port $CARD $SPEAKERS
    deactivate Headphone
    activate Front
elif [[ $1 = both ]]; then
    pactl set-sink-port $CARD $SPEAKERS
    activate Headphone
    activate Front
fi

# update statusbar module
STATUSBAR_FIFO="/tmp/statusbar_fifo"
[ -p $STATUSBAR_FIFO ] && echo speakers > "$STATUSBAR_FIFO"
