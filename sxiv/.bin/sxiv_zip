#!/bin/bash

set -e

function print_help {
    echo "usage:" >&2
    echo "  sxiv_zip -h" >&2
    echo "  sxiv_zip [--] zipfile | rarfile | directory" >&2
    # echo "  sxiv_zip -d [--] dir" >&2
}

while [[ "$1" ]]; do
    case "$1" in
        # -d) fold=true ;;
        -h) print_help; exit 0 ;;
        --) shift; break ;;
        *) break ;;
    esac
    shift
done

if [[ $# -ne 1 ]]; then
    echo "too many arguments? too few?" >&2
    print_help
    exit 0
fi

targ=$1
if [[ ! -e $targ ]]; then
    echo "\"$targ\" does not exist" >&2
    exit 1
fi

temp=$(mktemp -d --tmpdir 'sxiv_zip.XXXXXXXXXX')
trap 'rm -rf "$temp"' EXIT

if [[ -d $targ ]]; then
    while IFS='' read -r line || [[ -n "$line" ]]; do
        if file -b --mime-type "$line" | grep -q '^image/'; then
            cp -t "$temp" "$line"
        fi
    done <<< "$(find "$1" -mindepth 1 -maxdepth 1)"
elif [[ -f $targ ]]; then
    ext=${targ##*.}
    case ${ext,,} in
        zip|cbz)
            if ! unzip "$targ" -d "$temp" &>/dev/null; then
                echo "unzip failed, is this really a zip file?" >&2
                exit 1
            fi
            ;;
        rar|cbr)
            if ! unrar x "$targ" "$temp" &>/dev/null; then
                echo "unrar failed, is this really a rar file?" >&2
                exit 1
            fi
            ;;
        *)
            echo "\"$targ\" doesn't seem to be a zip/cbz file, hmmm.." >&2
            exit 1
            ;;
    esac
else
    echo "expected a file or directory" >&2
    exit 1
fi

find "$temp" -type f | LC_ALL=C sort -V | sxiv -i
