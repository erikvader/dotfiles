[user]
    name = Erik Rimskog
    email = erik.rimskog@gmail.com
[pull]
    ff = only
[merge]
    conflictstyle = diff3
[rerere]
    enabled = 1
[init]
    defaultBranch = master
[core]
    quotepath = off
[diff]
    algorithm = histogram
[alias]
    # alias
    alias = "!sed -Ee '1,/\\[alias]/d' -e 's/^ +//' -e \"s/^#(.*)$/$(tput setaf 4)#\\1$(tput sgr0)/\" ~/.gitconfig"
    # clone
    cloner = clone --recurse-submodules
    # add
    a = add
    aa = a --all
    au = a --update
    # rebase
    rb = rebase
    rbc = rb --continue
    rba = rb --abort
    rbm = rb --interactive --keep-base
    # restore
    re = restore
    res = re --staged
    resw = res --worktree
    # merge
    me = merge
    mec = me --no-ff
    mef = me --ff-only
    # reset
    rs = reset
    rsh = rs --hard
    rshr = !: reset && git-foreach git-display rsh
    # squash
    sq = !: branch && git-squash
    # commit
    co = commit
    coa = co --amend
    coan = coa --no-edit
    # clean
    cl = clean
    clr = !: clean && git-foreach git-display cl
    # diff [A..B same as A B] [A...B same as (merge-base A B) B]
    d = diff
    dr = d --submodule=diff
    ds = d --staged
    # status
    s = status
    sr = !git-foreach git-status-brief
    sa = s --untracked-files=all
    # fetch
    f = fetch
    fr = !: fetch && git-foreach git-display f
    # pull
    pl = pull
    plr = !: pull && git-foreach --not-detached git-display pl
    plrf = !git-foreach --not-detached git-display f '&&' git rsh @{upstream}
    # push
    ps = push
    psr = !: push && git-foreach --not-detached git-display ps
    psforce = ps --force-with-lease
    # switch
    sw = switch
    swr = !: switch && git-foreach --ignore-fail git-display sw
    swd = sw --detach
    swdr = !: switch && git-foreach --ignore-fail git-display swd
    swur = !: switch && git-foreach --is-detached --ignore-fail git-display swd
    # submodule
    m = submodule
    mf = m foreach --recursive
    mu = m update --init --checkout --recursive
    ms = m summary
    # log [A..B same as ^A B] [A...B same as A B ^(merge-base A B)]
    l = log --boundary --graph --pretty='%C(yellow)%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
    la = l --all
    # worktree
    wt = worktree
    wta = wt add
    wtl = wt list
    wtr = wt remove
