#!/bin/bash

# Runs a command in all submodules and, unlike `git submodule foreach --recursive`, also in the top-level repo.

set -e

notdetached=false
isdetached=false
ignorestatus=false
doall=false
while [[ $# -gt 0 ]]; do
    case "$1" in
        # The submodule must have a branch checked out for the command to run
        --not-detached|--branch|-b)
            notdetached=true
            ;;
        # The submodule must be in detached head for the command to run
        --is-detached|-d)
            isdetached=true
            ;;
        # Don't abort if the command fails
        --ignore-fail|-i)
            ignorestatus=true
            ;;
        # Don't limit to only submodules in the current directory
        --all|-a)
            doall=true
            ;;
        *) break ;;
    esac
    shift
done

cmd=$*
if $ignorestatus; then
    cmd="$cmd || true"
fi
if $notdetached; then
    cmd="if git-not-detached; then $cmd; fi"
elif $isdetached; then
    cmd="if ! git-not-detached; then $cmd; fi"
fi
if ! $doall; then
    cmd='case "$displaypath" in ../*) true ;; *) '"$cmd"' ;; esac'
fi

displaypath=$(git rev-parse --show-cdup)
displaypath=${displaypath:-.}
export displaypath
# TODO: also add name, sm_path, sha1 and toplevel

(cd "$displaypath" && exec sh -c "$cmd" "$cmd")

export -n displaypath

git submodule --quiet foreach --recursive "$cmd"
