#!/bin/bash

status_file="/tmp/program_mode"

function basic {
    setxkbmap se nodeadkeys
    xset r rate 300 35
}

function on {
    if (set -e
        basic
        sleep 0.5
        xmodmap -e 'keycode 21 = grave acute dead_acute dead_grave dead_acute dead_grave dead_acute dead_grave' \
                -e 'keycode 35 = asciicircum asciitilde diaeresis diaeresis diaeresis diaeresis diaeresis' \
                -e 'keycode 13 = 4 dollar currency cent currency cent currency cent' \
                -e 'keycode 34 = at backslash aring Aring aring Aring aring Aring' \
                -e 'keycode 48 = bracketright braceright adiaeresis Adiaeresis adiaeresis Adiaeresis adiaeresis Adiaeresis' \
                -e 'keycode 47 = bracketleft braceleft odiaeresis Odiaeresis odiaeresis Odiaeresis odiaeresis Odiaeresis' \
                -e 'keycode 49 = bar section at paragraph at paragraph at paragraph'

        if [[ -f $HOME/.xmodmap_prog.local ]]; then
            xmodmap "$HOME/.xmodmap_prog.local"
        fi

        xmodmap -e 'clear lock' -e 'keycode 66 = Control_R' -e 'add control = Control_R'
        xcape -e 'Control_R=Escape'
       )
    then
        echo on > "$status_file"
    else
        notify-send 'Programming keyboard mode' 'error turning on :('
        exit 1
    fi
}

function sweon {
    xmodmap -e 'keycode 47 = odiaeresis Odiaeresis' \
            -e 'keycode 48 = adiaeresis Adiaeresis' \
            -e 'keycode 34 = aring Aring' &&
    echo swe > "$status_file"
}

function sweoff {
    xmodmap -e 'keycode 47 = bracketleft braceleft odiaeresis Odiaeresis odiaeresis Odiaeresis' \
            -e 'keycode 48 = bracketright braceright adiaeresis Adiaeresis adiaeresis Adiaeresis' \
            -e 'keycode 34 = at backslash aring Aring aring Aring' &&
    echo on > "$status_file"
}

function off {
    if (basic
        pkill -x xcape 2>/dev/null
       )
    then
        echo off > "$status_file"
    else
        notify-send 'Programming keyboard mode' 'error turning off :('
        exit 1
    fi
}

status=off
if [[ -f "$status_file" ]]; then
    read -r status < "$status_file"
fi

case "$1" in
    basic) basic ;;
    off) off ;;
    on) on ;;
    swetoggle)
        case "$status" in
            swe) sweoff ;;
            on) sweon ;;
            *)
                notify-send 'åäö mode' "program mode is not enabled, can't toggle"
                exit 1
                ;;
        esac
        ;;
    "")
        case "$status" in
            on | swe) off ;;
            off) on ;;
            *)
                echo "something is wrong with your file" >&2
                exit 1
                ;;
        esac
        ;;
    status)
        echo "$status"
        exit 0
        ;;
    *)
        echo "your argument is wrong" >&2
        exit 1
        ;;
esac


exec fifoecho /tmp/statusbar_fifo progmode
