# Your snippets 
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'.source':
  'Section split':
    'prefix': 'section'
    'body': '--------------------------------------------------${1:name}--------------------------------------------------$2'

'.source.haskell':
  'Function Declaration':
    'prefix': 'funcdef'
    'body': """
            {- ${1:function name}
               PRE: ${2:pre}
               POST: ${3:post}
               EXAMPLES: ${4:examples}
            -}$5
            """
  'Data representation':
     'prefix': 'datarep'
     'body': """
             {- REPRESENTATION CONVENTION: ${1:description of how the datatype represents data}
                REPRESENTATION INVARIANT: ${2:requirements on elements of the datatype that the code preserves at all times}
             -}$3
             """
